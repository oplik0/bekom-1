version: "3.8"

services:
  traefik:
    image: traefik:latest
    command:
      - "--providers.docker=true"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.network=bekom_webnet"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.http.http.redirections.entryPoint.to=https"
      - "--entrypoints.http.http.redirections.entryPoint.permanent=true"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=le@tmp.opliko.dev"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--serversTransport.insecureSkipVerify=true"
      - "--experimental.plugins.coraza.moduleName=github.com/jcchavezs/coraza-http-wasm-traefik"
      - "--experimental.plugins.coraza.version=v0.3.0"
      - "--log"
      - --api
      # - --accesslog
      # - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-certificates:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - webnet
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:514"
        tag: "traefik"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - traefik.docker.network=bekom_webnet
        - "traefik.tls.options.default.minVersion=VersionTLS13"
        - "traefik.tls.options.modern.minVersion=VersionTLS13"
        - traefik.http.middlewares.admin-auth.basicauth.users=netrunners:$$apr1$$37ep4xmf$$X5BMTP2zFovOs5AI5CZEK0
        # https-redirect middleware to redirect HTTP to HTTPS
        # It can be re-used by other stacks in other Docker Compose files
        # - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        # - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        # traefik-http set up only to use the middleware to redirect to https
        # Uses the environment variable DOMAIN
        - traefik.http.routers.traefik-public-http.rule=Host(`traefik.bekom.pw.opliko.dev`)
        - traefik.http.routers.traefik-public-http.entrypoints=http
        # traefik-https the actual router using HTTPS
        # Uses the environment variable DOMAIN
        - traefik.http.routers.traefik-public-https.rule=Host(`traefik.bekom.pw.opliko.dev`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        # Use the special Traefik service api@internal with the web UI/Dashboard
        - traefik.http.routers.traefik-public-https.service=api@internal
        # Use the "le" (Let's Encrypt) resolver created below
        - traefik.http.routers.traefik-public-https.tls.certresolver=le
        # Enable HTTP Basic auth, using the middleware created above
        - traefik.http.routers.traefik-public-https.middlewares=admin-auth
        # Define the port inside of the Docker service to use
        - traefik.http.services.traefik-public.loadbalancer.server.port=8080
        # - "traefik.tls.stores.default.defaultgeneratedcert.resolver=myresolver"
        # - "traefik.tls.stores.default.defaultgeneratedcert.domain.main=bekom.pw.opliko.dev"
  db:
    # hardened MariaDB image
    image: bitnami/mariadb:11.5
    environment:
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - MARIADB_USER=ctfd
      - MARIADB_PASSWORD_FILE=/run/secrets/db_password
      - MARIADB_DATABASE=ctfd
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_CHARACTER_SET=utf8mb4
      - MARIADB_COLLATE=utf8mb4_unicode_ci
      - MARIADB_EXTRA_FLAGS=--max-connections=1000 --wait-timeout=28800 --log-warnings=0
    volumes:
      - dbdata:/bitnami/mariadb
    networks:
      - dbnet
    deploy:
      labels:
        - "traefik.enable=false"
    secrets:
      - db_root_password
      - db_password

  cache:
    image: redis:alpine
    networks:
      - dbnet
    deploy:
      labels:
        - "traefik.enable=false"
  ctfd:
    image: ctfd/ctfd:latest
    environment:
      BASE_URL: https://ctfd.bekom.pw.opliko.dev
      PORT: 8000
      WORKERS: 1
      LOG_FOLDER: /var/log/CTFd
      UPLOAD_FOLDER: /var/uploads
      REVERSE_PROXY: "true"
      REDIS_URL: redis://cache:6379
      ACCESS_LOG: "-"
      ERROR_LOG: "-"
      SECRET_KEY: hjajdwawdawdawawdawdaw
    entrypoint: [ '/bin/sh', '-c', 'export DATABASE_URL="mysql+pymysql://ctfd:$$(cat /var/run/secrets/db_password)@db/ctfd" ; /opt/CTFd/docker-entrypoint.sh' ]
    volumes:
      - ctfdlogs:/var/log/CTFd
      - ctfddata:/var/uploads
    ports:
      - "8000:8000"
    networks:
      - webnet
      - dbnet
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.lbswarm=true"
        - "traefik.docker.network=bekom_webnet"
        - traefik.constraint-label=traefik-public
        - "traefik.http.routers.ctfd.rule=Host(`ctfd.bekom.pw.opliko.dev`)"
        - "traefik.http.routers.ctfd.middlewares=waf"
        - "traefik.http.routers.ctfd.entrypoints=https"
        - "traefik.http.routers.ctfd.tls=true"
        - "traefik.http.routers.ctfd.tls.certresolver=le"
        - "traefik.http.services.ctfd.loadbalancer.server.port=8000"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[0]=SecRequestBodyAccess Off"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[1]=SecResponseBodyAccess Off"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[2]=SecAuditLog /dev/stdout"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[3]=SecDebugLog /dev/stdout"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[4]=Include @coraza.conf-recommended"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[5]=Include @crs-setup.conf.example"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[6]=Include @owasp_crs/**.conf"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[7]=SecDebugLogLevel 4"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[8]=SecRuleEngine On"
        - "traefik.http.middlewares.waf.plugin.coraza.directives[9]=SecAction \"id:900000,phase:1,pass,t:none,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.3.0',setvar:tx.blocking_paranoia_level=2\""
        - "traefik.http.middlewares.waf.plugin.coraza.directives[10]=SecRule REMOTE_ADDR \"194.29.160.181\" \"id:2222223, phase:1, pass, log, logdata:'request from WUT'\""
        # - "traefik.http.middlewares.waf.plugin.coraza.directives[11]=SecRule REQUEST_HEADERS:X-Forwarded-For \"@eq 194.29.160.181\" \"id:2222223, phase:1, pass, log, logdata:'request from WUT'\""
        - "traefik.http.middlewares.waf.plugin.coraza.directives[11]=SecAction \"id:900700, phase:1, nolog, pass, t:none, setvar:'tx.dos_burst_time_slice=30', setvar:'tx.dos_counter_threshold=15', setvar:'tx.dos_block_timeout=20'\""
        # - "traefik.http.middlewares.waf.plugin.coraza.directives[10]=SecRule RESPONSE_STATUS \"@streq 408\" \"phase:5,t:none,nolog,pass,setvar:ip.slow_dos_counter=+1,tx:ip.slow_dos_counter=60\""
        # - "traefik.http.middlewares.waf.plugin.coraza.directives[11]=SecRule IP:SLOW_DOS_COUNTER \"@gt 5\" \"phase:1,t:none,log,drop,msg:'Client Connection Dropped due to high # of slow DoS alerts'\""
    secrets:
      - db_password

volumes:
  traefik-certificates:
  dbdata:
  ctfddata:
  ctfdlogs:

networks:
  webnet:
    driver: overlay
    driver_opts:
      encrypted: "true"
  dbnet:
    driver: overlay
    driver_opts:
      encrypted: "true"

secrets:
  db_password:
    external: true
  db_root_password:
    external: true